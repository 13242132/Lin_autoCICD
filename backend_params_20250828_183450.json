{
  "projectName": "AI生成项目",
  "projectDescription": "博客系统",
  "databaseType": "mysql",
  "files": [
    {
      "fileName": "需求文档.md",
      "content": "# 需求文档：博客系统\\n\\n## 一、文档控制信息\\n\\n1. 版本历史\\n- 版本号：v1.0\\n- 修订日期：2025-04-05\\n- 修改人：需求分析师\\n- 变更描述：初始版本创建\\n\\n2. 术语表\\n- API（Application Programming Interface）：应用程序编程接口，用于系统间数据交互，例如获取用户信息接口\\n- CRUD（Create, Read, Update, Delete）：增删改查操作，用于博客文章管理\\n- JWT（JSON Web Token）：一种轻量级的身份认证机制，用于用户登录和鉴权\\n- UI（User Interface）：用户界面，指用户与系统交互的前端界面\\n- UX（User Experience）：用户体验，指用户在使用系统过程中的感受与满意度\\n\\n## 二、需求详述\\n\\n### 1. 业务背景\\n\\n#### 行业现状分析\\n1. 博客平台内容同质化严重，缺乏个性化推荐机制。\\n2. 用户创作工具不友好，编辑体验差，影响发布频率。\\n3. 内容审核机制不健全，存在垃圾内容和敏感信息传播风险。\\n\\n#### 项目商业目标\\n- 提升用户活跃度：注册用户日均发帖 ≥ 1篇\\n- 增强内容质量：推荐算法提升用户阅读时长至平均8分钟/篇\\n- 降低运营成本：自动化审核机制减少人工干预比例至5%以内\\n\\n#### 成功指标定义\\n- 发布成功率 ≥ 99%\\n- 用户日活 ≥ 10,000\\n- 敏感内容漏检率 ≤ 0.1%\\n\\n### 2. 干系人分析\\n\\n#### 用户角色清单\\n- 读者：浏览、搜索、评论文章，每周使用频率≥3次\\n- 作者：撰写、发布、编辑文章，每日使用频率≥1次\\n- 管理员：审核内容、管理用户、配置系统，每日使用频率≥5次\\n\\n#### 内部干系人映射\\n- 产品部：关注用户增长与功能完整性（影响力：高）\\n- 运营部：关注内容质量和用户行为数据（影响力：中）\\n- 技术部：关注系统稳定性与性能表现（影响力：高）\\n\\n### 3. 功能需求\\n\\n#### 功能1：用户注册\\n- 需求ID：F01-001\\n- 用户故事：作为新用户，我希望注册账号，以便能够发布文章和评论\\n- 业务流程：\\n  - 正常流程：\\n    1. 用户访问注册页面\\n    2. 输入用户名、邮箱、密码、确认密码\\n    3. 点击“注册”按钮\\n    4. 系统发送确认邮件\\n    5. 用户点击邮件链接完成注册\\n  - 替代流程：邮箱未验证前允许修改邮箱\\n  - 异常流程：\\n    - 用户名重复 → 提示“用户名已被占用”\\n    - 邮箱格式错误 → 提示“请输入正确的邮箱地址”\\n    - 邮件发送失败 → 提示“邮件发送失败，请重试”\\n- 业务规则：\\n  - if 用户名已存在 then 阻止注册并提示错误\\n  - if 密码强度不足（<8位） then 提示“密码需至少8位”\\n  - 用户注册后状态为“待验证”→ 点击链接后转为“已验证”\\n- 数据要求：\\n  - 中文名称：用户名\\n  - 英文名称：Username\\n  - 类型：string\\n  - 约束：6-32字符，唯一\\n  - 示例值：john_doe\\n  - 中文名称：邮箱\\n  - 英文名称：Email\\n  - 类型：string\\n  - 约束：符合邮箱格式，唯一\\n  - 示例值：john.doe@example.com\\n  - 中文名称：密码\\n  - 英文名称：Password\\n  - 类型：string\\n  - 约束：至少8位，包含大小写+数字\\n  - 示例值：P@ssw0rd\\n\\n#### 功能2：密码登录\\n- 需求ID：F01-002\\n- 用户故事：作为已注册用户，我希望通过用户名和密码登录，以便访问我的博客内容\\n- 业务流程：\\n  - 正常流程：\\n    1. 用户访问登录页面\\n    2. 输入用户名、密码\\n    3. 点击“登录”按钮\\n    4. 系统验证并跳转至主页\\n  - 替代流程：记住我功能支持7天免登录\\n  - 异常流程：\\n    - 用户名不存在 → 提示“用户名或密码错误”\\n    - 密码错误 → 提示“用户名或密码错误”\\n    - 多次失败 → 限制登录并提示联系客服\\n- 业务规则：\\n  - if 用户未验证邮箱 then 拒绝登录并提示验证邮件\\n  - if 登录失败 ≥ 5次 then 锁定账号15分钟\\n- 数据要求：\\n  - 中文名称：用户名\\n  - 英文名称：Username\\n  - 类型：string\\n  - 约束：必须已注册\\n  - 示例值：john_doe\\n  - 中文名称：密码\\n  - 英文名称：Password\\n  - 类型：string\\n  - 约束：必须匹配注册密码\\n  - 示例值：P@ssw0rd\\n\\n#### 功能3：文章发布与管理\\n- 需求ID：F02-001\\n- 用户故事：作为作者，我希望撰写并发布文章，以便与读者分享知识\\n- 业务流程：\\n  - 正常流程：\\n    1. 用户进入编辑页面\\n    2. 输入标题、正文、标签\\n    3. 点击“发布”按钮\\n    4. 文章进入审核队列\\n    5. 审核通过后公开可见\\n  - 替代流程：保存为草稿或设定定时发布\\n  - 异常流程：\\n    - 标题为空 → 提示“标题不能为空”\\n    - 正文内容过短（<50字） → 提示“正文内容至少50字”\\n    - 审核未通过 → 系统标记原因并通知作者\\n- 业务规则：\\n  - if 文章字数 < 50 then 阻止发布并提示\\n  - if 标签数 > 5 then 提示“最多允许5个标签”\\n  - if 审核未通过 then 用户可编辑后重新提交\\n- 数据要求：\\n  - 中文名称：标题\\n  - 英文名称：Title\\n  - 类型：string\\n  - 约束：20-200字符\\n  - 示例值：深入浅出Python面向对象编程\\n  - 中文名称：正文\\n  - 英文名称：Content\\n  - 类型：text\\n  - 约束：≥50字符\\n  - 示例值：面向对象编程是一种……\\n  - 中文名称：标签\\n  - 英文名称：Tags\\n  - 类型：array\\n  - 约束：最多5个，每个长度≤20字符\\n  - 示例值：[\"编程\", \"Python\", \"教程\"]\\n\\n### 4. 非功能需求\\n\\n- 性能指标：\\n  - 最大并发用户数：5000\\n  - 平均响应时间 < 2s\\n  - 系统吞吐量：每秒处理 ≥ 200请求\\n- 安全要求：\\n  - 用户密码采用BCrypt加密\\n  - 所有通信采用HTTPS\\n  - 审核操作日志保留≥180天\\n- 兼容性清单：\\n  - 支持操作系统：Windows 10/11、macOS 12+、Android 10+、iOS 14+\\n  - 支持浏览器：Chrome 90+、Firefox 85+、Edge 90+、Safari 14+\\n\\n### 5. 系统上下文\\n\\n- 上下游系统接口说明：\\n  - 接口名称：获取用户信息\\n  - 协议类型：RESTful API\\n  - 调用频率：高（每日≥10万次）\\n  - 数据格式样例：{ \"userId\": \"12345\", \"username\": \"john_doe\" }\\n  - 接口名称：内容审核服务\\n  - 协议类型：gRPC\\n  - 调用频率：中\\n  - 数据格式样例：{ \"content\": \"...\", \"result\": \"approved\" }\\n- 关键依赖项：\\n  - 第三方服务：AWS SES（发送邮件，SLA ≥ 99.9%）\\n  - 第三方组件：Elasticsearch（全文检索，SLA ≥ 99.5%）\\n\\n### 6. 实体列表\\n\\n- User：用户信息，包含注册、登录、权限管理\\n- Article：文章内容，包含标题、正文、状态\\n- Comment：评论内容，关联文章与用户\\n- Tag：标签信息，用于分类与推荐\\n- AuditLog：审核日志，记录审核操作历史\\n- EmailVerificationToken：邮箱验证令牌，用于注册确认\\n- LoginSession：登录会话，用于用户状态管理",
      "type": "requirements_document"
    },
    {
      "fileName": "index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>博客系统 - 首页</title>\n  <style>\n    body {\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      margin: 0;\n      background-color: #f4f6f8;\n      color: #333;\n    }\n\n    header {\n      background-color: #2c3e50;\n      color: white;\n      padding: 15px 20px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    header h1 {\n      margin: 0;\n      font-size: 24px;\n    }\n\n    .nav-buttons {\n      display: flex;\n      gap: 15px;\n    }\n\n    .nav-buttons a {\n      color: white;\n      text-decoration: none;\n      padding: 8px 15px;\n      border-radius: 4px;\n      transition: background 0.3s;\n    }\n\n    .nav-buttons a:hover {\n      background-color: #1abc9c;\n    }\n\n    .search-box input {\n      padding: 6px;\n      border: none;\n      border-radius: 4px;\n      width: 200px;\n    }\n\n    main {\n      max-width: 1200px;\n      margin: 20px auto;\n      padding: 0 20px;\n      display: grid;\n      grid-template-columns: 3fr 1fr;\n      gap: 30px;\n    }\n\n    .article-list {\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n    }\n\n    .article-card {\n      background: white;\n      padding: 20px;\n      border-radius: 8px;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n      transition: transform 0.2s;\n    }\n\n    .article-card:hover {\n      transform: translateY(-5px);\n    }\n\n    .article-card h2 {\n      font-size: 20px;\n      margin: 0 0 10px;\n    }\n\n    .article-meta {\n      font-size: 14px;\n      color: #777;\n      margin-bottom: 10px;\n    }\n\n    .article-excerpt {\n      font-size: 15px;\n      margin-bottom: 10px;\n    }\n\n    .tags {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 6px;\n    }\n\n    .tags span {\n      background: #ecf0f1;\n      padding: 4px 8px;\n      border-radius: 4px;\n      font-size: 13px;\n    }\n\n    .sidebar {\n      display: flex;\n      flex-direction: column;\n      gap: 20px;\n    }\n\n    .section-title {\n      font-size: 18px;\n      font-weight: bold;\n      margin-bottom: 10px;\n      color: #2c3e50;\n    }\n\n    .tag-list, .author-list {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n    }\n\n    .tag-list span, .author-list span {\n      background: white;\n      padding: 6px 10px;\n      border-radius: 4px;\n      cursor: pointer;\n      transition: background 0.3s;\n    }\n\n    .tag-list span:hover, .author-list span:hover {\n      background: #ecf0f1;\n    }\n\n    footer {\n      text-align: center;\n      padding: 20px;\n      background-color: #2c3e50;\n      color: white;\n      margin-top: 40px;\n    }\n\n    @media (max-width: 900px) {\n      main {\n        grid-template-columns: 1fr;\n      }\n    }\n  </style>\n</head>\n<body>\n  <header>\n    <h1>博客系统</h1>\n    <div class=\"nav-buttons\">\n      <a href=\"login.html\">登录</a>\n      <a href=\"register.html\">注册</a>\n    </div>\n  </header>\n\n  <main>\n    <section class=\"article-list\">\n      <div class=\"article-card\">\n        <h2>深入浅出Python面向对象编程</h2>\n        <div class=\"article-meta\">作者：john_doe | 发布时间：2025-04-01 | 阅读量：1200</div>\n        <div class=\"article-excerpt\">面向对象编程是一种……</div>\n        <div class=\"tags\">\n          <span>编程</span>\n          <span>Python</span>\n          <span>教程</span>\n        </div>\n      </div>\n      <div class=\"article-card\">\n        <h2>前端性能优化的十大技巧</h2>\n        <div class=\"article-meta\">作者：webmaster | 发布时间：2025-04-02 | 阅读量：980</div>\n        <div class=\"article-excerpt\">优化网站性能可以显著提升用户体验……</div>\n        <div class=\"tags\">\n          <span>前端</span>\n          <span>性能</span>\n        </div>\n      </div>\n    </section>\n\n    <aside class=\"sidebar\">\n      <div>\n        <div class=\"section-title\">热门标签</div>\n        <div class=\"tag-list\">\n          <span>编程</span>\n          <span>Python</span>\n          <span>教程</span>\n          <span>前端</span>\n          <span>性能</span>\n        </div>\n      </div>\n      <div>\n        <div class=\"section-title\">推荐作者</div>\n        <div class=\"author-list\">\n          <span>john_doe</span>\n          <span>webmaster</span>\n          <span>tech_guru</span>\n        </div>\n      </div>\n    </aside>\n  </main>\n\n  <footer>\n    &copy; 2025 博客系统. 保留所有权利。\n  </footer>\n</body>\n</html>",
      "type": "prototype_file"
    },
    {
      "fileName": "login.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>登录 - 博客系统</title>\n  <style>\n    * {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    }\n\n    body {\n      background: linear-gradient(to right, #f8f9fa, #e9ecef);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n\n    .login-container {\n      background-color: #ffffff;\n      padding: 40px;\n      border-radius: 10px;\n      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n      width: 100%;\n      max-width: 400px;\n    }\n\n    .login-container h2 {\n      text-align: center;\n      margin-bottom: 20px;\n      color: #343a40;\n    }\n\n    .form-group {\n      margin-bottom: 15px;\n    }\n\n    .form-group label {\n      display: block;\n      font-weight: bold;\n      margin-bottom: 5px;\n    }\n\n    .form-group input {\n      width: 100%;\n      padding: 10px;\n      border: 1px solid #ced4da;\n      border-radius: 5px;\n      transition: border-color 0.3s ease;\n    }\n\n    .form-group input:focus {\n      border-color: #007bff;\n      outline: none;\n      box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n    }\n\n    .remember-forgot {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 15px;\n    }\n\n    .remember-forgot a {\n      color: #007bff;\n      text-decoration: none;\n      font-size: 14px;\n    }\n\n    .remember-forgot a:hover {\n      text-decoration: underline;\n    }\n\n    .login-button {\n      width: 100%;\n      padding: 12px;\n      background-color: #007bff;\n      color: white;\n      border: none;\n      border-radius: 5px;\n      font-size: 16px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n\n    .login-button:hover {\n      background-color: #0056b3;\n    }\n\n    .error-message {\n      color: #dc3545;\n      margin-bottom: 15px;\n      text-align: center;\n      display: none;\n    }\n\n    .register-link {\n      text-align: center;\n      margin-top: 20px;\n    }\n\n    .register-link a {\n      color: #28a745;\n      text-decoration: none;\n      font-weight: bold;\n    }\n\n    .register-link a:hover {\n      text-decoration: underline;\n    }\n\n    @media (max-width: 500px) {\n      .login-container {\n        padding: 20px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"login-container\">\n    <h2>用户登录</h2>\n    <div class=\"error-message\" id=\"error-message\">\n      用户名或密码错误，请重试。\n    </div>\n    <form id=\"login-form\">\n      <div class=\"form-group\">\n        <label for=\"username\">用户名或邮箱</label>\n        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"请输入用户名或邮箱\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">密码</label>\n        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"请输入密码\" required>\n      </div>\n      <div class=\"remember-forgot\">\n        <label>\n          <input type=\"checkbox\" id=\"remember\"> 记住我\n        </label>\n        <a href=\"#\">忘记密码？</a>\n      </div>\n      <button type=\"submit\" class=\"login-button\">登录</button>\n    </form>\n    <div class=\"register-link\">\n      <p>还没有账号？<a href=\"register.html\">立即注册</a></p>\n    </div>\n  </div>\n\n  <script>\n    // 模拟登录失败提示（仅用于原型演示）\n    const form = document.getElementById('login-form');\n    const errorMessage = document.getElementById('error-message');\n\n    form.addEventListener('submit', function (e) {\n      e.preventDefault();\n      // 模拟验证失败\n      errorMessage.style.display = 'block';\n    });\n\n    // 添加平滑过渡效果\n    document.querySelectorAll('input').forEach(input => {\n      input.addEventListener('focus', () => {\n        input.style.borderColor = '#007bff';\n      });\n      input.addEventListener('blur', () => {\n        input.style.borderColor = '#ced4da';\n      });\n    });\n  </script>\n</body>\n</html>",
      "type": "prototype_file"
    },
    {
      "fileName": "editor.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>文章编辑页面</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background-color: #f4f6f8;\n            margin: 0;\n            padding: 0;\n        }\n\n        header {\n            background-color: #1e88e5;\n            color: white;\n            padding: 1rem;\n            text-align: center;\n            font-size: 1.5rem;\n        }\n\n        .container {\n            max-width: 1000px;\n            margin: 2rem auto;\n            background-color: white;\n            padding: 2rem;\n            border-radius: 8px;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        }\n\n        .form-group {\n            margin-bottom: 1.5rem;\n        }\n\n        label {\n            display: block;\n            margin-bottom: 0.5rem;\n            font-weight: bold;\n        }\n\n        input[type=\"text\"] {\n            width: 100%;\n            padding: 0.75rem;\n            font-size: 1rem;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            box-sizing: border-box;\n        }\n\n        textarea {\n            width: 100%;\n            height: 300px;\n            padding: 0.75rem;\n            font-size: 1rem;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            resize: vertical;\n            box-sizing: border-box;\n        }\n\n        .tag-input {\n            display: flex;\n            flex-wrap: wrap;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            padding: 0.5rem;\n            min-height: 40px;\n        }\n\n        .tag-input input {\n            border: none;\n            outline: none;\n            flex: 1;\n            font-size: 1rem;\n            padding: 0.25rem 0;\n        }\n\n        .tag {\n            display: inline-block;\n            background-color: #e3f2fd;\n            color: #1e88e5;\n            padding: 0.25rem 0.75rem;\n            margin: 0.25rem;\n            border-radius: 15px;\n            font-size: 0.9rem;\n            position: relative;\n        }\n\n        .tag span {\n            cursor: pointer;\n            margin-left: 0.5rem;\n        }\n\n        .actions {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            flex-wrap: wrap;\n            gap: 1rem;\n        }\n\n        .actions button {\n            padding: 0.75rem 1.5rem;\n            font-size: 1rem;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            transition: background-color 0.3s ease;\n        }\n\n        .btn-save {\n            background-color: #6c757d;\n            color: white;\n        }\n\n        .btn-preview {\n            background-color: #4caf50;\n            color: white;\n        }\n\n        .btn-publish {\n            background-color: #2196f3;\n            color: white;\n        }\n\n        .btn-save:hover {\n            background-color: #5a6268;\n        }\n\n        .btn-preview:hover {\n            background-color: #43a047;\n        }\n\n        .btn-publish:hover {\n            background-color: #1976d2;\n        }\n\n        .helper {\n            font-size: 0.9rem;\n            color: #666;\n            margin-top: 0.25rem;\n        }\n\n        @media (max-width: 600px) {\n            .actions {\n                flex-direction: column;\n                align-items: stretch;\n            }\n\n            .actions button {\n                width: 100%;\n            }\n        }\n    </style>\n</head>\n<body>\n    <header>文章编辑</header>\n    <div class=\"container\">\n        <div class=\"form-group\">\n            <label for=\"title\">标题</label>\n            <input type=\"text\" id=\"title\" placeholder=\"请输入文章标题（20-200字符）\">\n            <div class=\"helper\">标题长度限制：20-200字符</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"content\">正文</label>\n            <textarea id=\"content\" placeholder=\"请输入正文内容（至少50字）\"></textarea>\n            <div class=\"helper\">当前字数：<span id=\"wordCount\">0</span> / 至少50字</div>\n        </div>\n        <div class=\"form-group\">\n            <label>标签（最多5个）</label>\n            <div class=\"tag-input\" id=\"tagInput\">\n                <input type=\"text\" id=\"tagField\" placeholder=\"输入标签后按回车\">\n            </div>\n            <div class=\"helper\">每个标签不超过20字符，最多5个标签</div>\n        </div>\n        <div class=\"actions\">\n            <button class=\"btn-save\">保存草稿</button>\n            <button class=\"btn-preview\">预览</button>\n            <button class=\"btn-publish\">发布</button>\n        </div>\n    </div>\n\n    <script>\n        const tagField = document.getElementById('tagField');\n        const tagInput = document.getElementById('tagInput');\n        const maxTags = 5;\n        let tags = [];\n\n        tagField.addEventListener('keydown', function(e) {\n            if (e.key === 'Enter' && tagField.value.trim() !== '' && tags.length < maxTags) {\n                e.preventDefault();\n                const tag = tagField.value.trim();\n                if (tag.length <= 20) {\n                    tags.push(tag);\n                    const tagDiv = document.createElement('div');\n                    tagDiv.className = 'tag';\n                    tagDiv.innerHTML = tag + ' <span onclick=\"removeTag(this)\">&times;</span>';\n                    tagInput.insertBefore(tagDiv, tagField.parentNode);\n                    tagField.value = '';\n                }\n            }\n        });\n\n        function removeTag(element) {\n            const tag = element.parentElement;\n            const index = tags.indexOf(tag.textContent.replace('×', '').trim());\n            if (index > -1) {\n                tags.splice(index, 1);\n            }\n            tag.remove();\n        }\n\n        const content = document.getElementById('content');\n        const wordCount = document.getElementById('wordCount');\n\n        content.addEventListener('input', function() {\n            const text = content.value.trim();\n            const words = text.length;\n            wordCount.textContent = words;\n        });\n    </script>\n</body>\n</html>",
      "type": "prototype_file"
    },
    {
      "fileName": "article.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>文章详情</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background-color: #f4f6f8;\n            margin: 0;\n            padding: 0;\n            color: #333;\n        }\n        header {\n            background-color: #ffffff;\n            padding: 20px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            text-align: center;\n        }\n        header h1 {\n            font-size: 2em;\n            margin: 0;\n            color: #1e90ff;\n        }\n        .container {\n            max-width: 1000px;\n            margin: 20px auto;\n            background-color: #fff;\n            padding: 30px;\n            border-radius: 8px;\n            box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n        }\n        .article-title {\n            font-size: 2em;\n            margin-bottom: 10px;\n            color: #333;\n        }\n        .article-meta {\n            font-size: 0.9em;\n            color: #888;\n            margin-bottom: 20px;\n        }\n        .article-content {\n            line-height: 1.8;\n            margin-bottom: 30px;\n        }\n        .tags {\n            margin-bottom: 20px;\n        }\n        .tags span {\n            display: inline-block;\n            background-color: #e0f7fa;\n            color: #00796b;\n            padding: 5px 10px;\n            margin-right: 10px;\n            border-radius: 20px;\n            font-size: 0.9em;\n        }\n        .actions {\n            margin-bottom: 30px;\n        }\n        .actions button {\n            background-color: #1e90ff;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            margin-right: 10px;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 0.9em;\n            transition: background-color 0.3s;\n        }\n        .actions button:hover {\n            background-color: #0f75d0;\n        }\n        .comment-section {\n            border-top: 1px solid #eee;\n            padding-top: 20px;\n        }\n        .comment {\n            margin-bottom: 15px;\n            padding: 10px;\n            background-color: #f9f9f9;\n            border-radius: 5px;\n        }\n        .comment-author {\n            font-weight: bold;\n            color: #1e90ff;\n        }\n        .comment-text {\n            margin-top: 5px;\n        }\n        footer {\n            text-align: center;\n            padding: 20px;\n            font-size: 0.9em;\n            color: #aaa;\n        }\n        @media (max-width: 600px) {\n            .container {\n                padding: 20px;\n            }\n            .article-title {\n                font-size: 1.5em;\n            }\n        }\n    </style>\n    <script>\n        // 模拟点赞、收藏、分享等交互效果\n        document.addEventListener('DOMContentLoaded', function () {\n            const likeBtn = document.getElementById('likeBtn');\n            const saveBtn = document.getElementById('saveBtn');\n            let liked = false;\n            let saved = false;\n\n            likeBtn.addEventListener('click', function () {\n                liked = !liked;\n                likeBtn.textContent = liked ? '已点赞' : '点赞';\n                likeBtn.style.backgroundColor = liked ? '#ff6347' : '#1e90ff';\n            });\n\n            saveBtn.addEventListener('click', function () {\n                saved = !saved;\n                saveBtn.textContent = saved ? '已收藏' : '收藏';\n                saveBtn.style.backgroundColor = saved ? '#32cd32' : '#1e90ff';\n            });\n        });\n    </script>\n</head>\n<body>\n    <header>\n        <h1>博客系统</h1>\n    </header>\n\n    <div class=\"container\">\n        <div class=\"article-title\">深入浅出Python面向对象编程</div>\n        <div class=\"article-meta\">\n            作者：john_doe | 发布时间：2025-04-05 | 阅读量：12345\n        </div>\n        <div class=\"article-content\">\n            面向对象编程是一种……（文章正文内容）。\n        </div>\n        <div class=\"tags\">\n            <span>编程</span>\n            <span>Python</span>\n            <span>教程</span>\n        </div>\n        <div class=\"actions\">\n            <button id=\"likeBtn\">点赞</button>\n            <button id=\"saveBtn\">收藏</button>\n            <button onclick=\"alert('分享功能暂未实现')\">分享</button>\n            <button onclick=\"window.location.href='edit_article.html'\">编辑</button>\n            <button onclick=\"confirm('确定删除该文章？')\">删除</button>\n        </div>\n\n        <div class=\"comment-section\">\n            <h3>评论区</h3>\n            <div class=\"comment\">\n                <div class=\"comment-author\">评论用户1</div>\n                <div class=\"comment-text\">写得真好，受益匪浅！</div>\n            </div>\n            <div class=\"comment\">\n                <div class=\"comment-author\">评论用户2</div>\n                <div class=\"comment-text\">建议加上更多代码示例。</div>\n            </div>\n        </div>\n    </div>\n\n    <footer>\n        &copy; 2025 博客系统. 保留所有权利。\n    </footer>\n</body>\n</html>",
      "type": "prototype_file"
    },
    {
      "fileName": "profile.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>个人中心</title>\n  <style>\n    body {\n      margin: 0;\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n      background-color: #f4f6f8;\n      color: #333;\n    }\n\n    header {\n      background-color: #ffffff;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      padding: 20px;\n      text-align: center;\n    }\n\n    header h1 {\n      margin: 0;\n      color: #007bff;\n    }\n\n    .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 20px;\n    }\n\n    .profile-card, .stats-card, .articles-card {\n      background-color: #fff;\n      border-radius: 10px;\n      box-shadow: 0 2px 6px rgba(0,0,0,0.1);\n      padding: 20px;\n      flex: 1;\n      min-width: 300px;\n    }\n\n    .profile-card h2 {\n      margin-top: 0;\n    }\n\n    .profile-info p {\n      margin: 8px 0;\n    }\n\n    .profile-actions button {\n      margin: 10px 10px 0 0;\n      padding: 10px 15px;\n      border: none;\n      background-color: #007bff;\n      color: white;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n    }\n\n    .profile-actions button:hover {\n      background-color: #0056b3;\n    }\n\n    .stats-card ul {\n      list-style: none;\n      padding: 0;\n    }\n\n    .stats-card li {\n      margin: 10px 0;\n    }\n\n    .articles-card h3 {\n      margin-top: 0;\n    }\n\n    .article-list {\n      list-style: none;\n      padding: 0;\n    }\n\n    .article-list li {\n      margin: 10px 0;\n      padding: 10px;\n      background-color: #f9f9f9;\n      border-radius: 5px;\n    }\n\n    .article-list li:hover {\n      background-color: #f1f1f1;\n    }\n\n    .footer {\n      text-align: center;\n      padding: 20px;\n      background-color: #ffffff;\n      color: #777;\n      font-size: 14px;\n      border-top: 1px solid #ddd;\n    }\n\n    @media (max-width: 768px) {\n      .container {\n        flex-direction: column;\n      }\n    }\n  </style>\n  <script>\n    // 仅用于美化交互，无业务逻辑\n    document.addEventListener('DOMContentLoaded', () => {\n      const buttons = document.querySelectorAll('.profile-actions button');\n      buttons.forEach(btn => {\n        btn.addEventListener('click', () => {\n          alert('跳转中...');\n        });\n      });\n    });\n  </script>\n</head>\n<body>\n  <header>\n    <h1>博客系统 - 个人中心</h1>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"profile-card\">\n      <h2>用户信息</h2>\n      <div class=\"profile-info\">\n        <p><strong>用户名：</strong> john_doe</p>\n        <p><strong>邮箱：</strong> john.doe@example.com</p>\n        <p><strong>注册时间：</strong> 2025-01-10</p>\n      </div>\n      <div class=\"profile-actions\">\n        <button onclick=\"location.href='edit_profile.html'\">编辑资料</button>\n        <button onclick=\"location.href='change_password.html'\">修改密码</button>\n      </div>\n    </div>\n\n    <div class=\"stats-card\">\n      <h3>统计数据</h3>\n      <ul>\n        <li>已发布文章：12 篇</li>\n        <li>草稿数量：3 篇</li>\n        <li>总评论数：45 条</li>\n        <li>平均阅读时长：8 分钟/篇</li>\n      </ul>\n    </div>\n\n    <div class=\"articles-card\">\n      <h3>我的文章</h3>\n      <ul class=\"article-list\">\n        <li>深入浅出Python面向对象编程</li>\n        <li>前端开发中的响应式设计技巧</li>\n        <li>构建第一个Node.js应用</li>\n        <li>使用Elasticsearch提升搜索体验</li>\n        <li>如何优化博客的SEO表现</li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"footer\">\n    <p>&copy; 2025 博客系统. 保留所有权利。</p>\n    <p>版本号：v1.0</p>\n  </div>\n</body>\n</html>",
      "type": "prototype_file"
    },
    {
      "fileName": "search.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>搜索结果页面</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #f4f4f4;\n            color: #333;\n        }\n\n        header {\n            background-color: #2c3e50;\n            color: white;\n            padding: 1rem;\n            text-align: center;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: auto;\n            padding: 1rem;\n            display: flex;\n            flex-wrap: wrap;\n            gap: 1rem;\n        }\n\n        .search-bar {\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            margin-bottom: 1rem;\n        }\n\n        .search-bar input[type=\"text\"] {\n            width: 60%;\n            padding: 0.75rem;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n            font-size: 1rem;\n        }\n\n        .filters {\n            background: white;\n            padding: 1rem;\n            border-radius: 8px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n            min-width: 250px;\n        }\n\n        .filters h3 {\n            margin-top: 0;\n        }\n\n        .filters label {\n            display: block;\n            margin: 0.5rem 0 0.25rem;\n        }\n\n        .filters select, .filters input[type=\"text\"] {\n            width: 100%;\n            padding: 0.5rem;\n            margin-bottom: 1rem;\n            border: 1px solid #ccc;\n            border-radius: 4px;\n        }\n\n        .results {\n            flex: 1;\n            min-width: 300px;\n        }\n\n        .result-item {\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n            padding: 1rem;\n            margin-bottom: 1rem;\n        }\n\n        .result-item h4 {\n            margin: 0 0 0.5rem;\n        }\n\n        .result-item p {\n            margin: 0;\n            font-size: 0.9rem;\n            color: #666;\n        }\n\n        .result-item a {\n            color: #2980b9;\n            text-decoration: none;\n        }\n\n        .result-item a:hover {\n            text-decoration: underline;\n        }\n\n        footer {\n            background-color: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 1rem;\n            margin-top: 2rem;\n        }\n\n        @media (max-width: 768px) {\n            .container {\n                flex-direction: column;\n            }\n            .search-bar input[type=\"text\"] {\n                width: 90%;\n            }\n            .filters {\n                min-width: 100%;\n            }\n        }\n    </style>\n    <script>\n        // 模拟排序和筛选交互效果\n        document.addEventListener('DOMContentLoaded', function () {\n            const sortSelect = document.getElementById('sortOption');\n            const tagInput = document.getElementById('filterTag');\n            const authorInput = document.getElementById('filterAuthor');\n\n            function updateResults() {\n                const sort = sortSelect.value;\n                const tag = tagInput.value.trim();\n                const author = authorInput.value.trim();\n\n                // 模拟动态效果\n                const results = document.querySelectorAll('.result-item');\n                results.forEach(item => {\n                    const tags = item.dataset.tags.split(',');\n                    const itemAuthor = item.dataset.author;\n\n                    const tagMatch = tag === '' || tags.includes(tag);\n                    const authorMatch = author === '' || itemAuthor.includes(author);\n\n                    item.style.display = (tagMatch && authorMatch) ? 'block' : 'none';\n                });\n\n                // 模拟排序\n                if (sort === 'time') {\n                    results.sort((a, b) => a.dataset.time - b.dataset.time);\n                } else {\n                    results.sort((a, b) => a.dataset.relevance - b.dataset.relevance);\n                }\n\n                const resultContainer = document.querySelector('.results');\n                resultContainer.innerHTML = '';\n                results.forEach(r => resultContainer.appendChild(r));\n            }\n\n            sortSelect.addEventListener('change', updateResults);\n            tagInput.addEventListener('input', updateResults);\n            authorInput.addEventListener('input', updateResults);\n        });\n    </script>\n</head>\n<body>\n    <header>\n        <h1>博客系统 - 搜索结果页面</h1>\n    </header>\n\n    <div class=\"search-bar\">\n        <input type=\"text\" placeholder=\"输入关键词进行搜索...\">\n    </div>\n\n    <div class=\"container\">\n        <div class=\"filters\">\n            <h3>筛选选项</h3>\n            <label for=\"filterTag\">标签：</label>\n            <input type=\"text\" id=\"filterTag\" placeholder=\"例如：编程\">\n\n            <label for=\"filterAuthor\">作者：</label>\n            <input type=\"text\" id=\"filterAuthor\" placeholder=\"例如：john_doe\">\n\n            <label for=\"sortOption\">排序方式：</label>\n            <select id=\"sortOption\">\n                <option value=\"relevance\">按相关度</option>\n                <option value=\"time\">按时间</option>\n            </select>\n        </div>\n\n        <div class=\"results\">\n            <div class=\"result-item\" data-tags=\"编程,Python,教程\" data-relevance=\"1\" data-time=\"1\">\n                <h4><a href=\"#\">深入浅出Python面向对象编程</a></h4>\n                <p>面向对象编程是一种……</p>\n                <p>作者：<strong>john_doe</strong> | 标签：编程, Python, 教程</p>\n            </div>\n            <div class=\"result-item\" data-tags=\"JavaScript,前端,开发\" data-relevance=\"0.8\" data-time=\"2\">\n                <h4><a href=\"#\">JavaScript高级开发技巧</a></h4>\n                <p>本文介绍了……</p>\n                <p>作者：<strong>jane_smith</strong> | 标签：JavaScript, 前端, 开发</p>\n            </div>\n            <div class=\"result-item\" data-tags=\"设计,UI,UX\" data-relevance=\"0.7\" data-time=\"3\">\n                <h4><a href=\"#\">提升用户体验的十大原则</a></h4>\n                <p>用户体验是……</p>\n                <p>作者：<strong>designer123</strong> | 标签：设计, UI, UX</p>\n            </div>\n        </div>\n    </div>\n\n    <footer>\n        <p>&copy; 2025 博客系统. 版权所有.</p>\n    </footer>\n</body>\n</html>",
      "type": "prototype_file"
    },
    {
      "fileName": "tags.html",
      "content": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>标签分类 - 博客系统</title>\n    <style>\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background-color: #f9f9f9;\n            margin: 0;\n            padding: 0;\n            color: #333;\n        }\n\n        header {\n            background-color: #2c3e50;\n            color: white;\n            padding: 15px 20px;\n            text-align: center;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 1.8em;\n        }\n\n        nav {\n            display: flex;\n            justify-content: center;\n            background-color: #ecf0f1;\n            padding: 10px 0;\n            flex-wrap: wrap;\n        }\n\n        nav a {\n            color: #2c3e50;\n            text-decoration: none;\n            margin: 0 15px;\n            font-weight: bold;\n            transition: color 0.3s;\n        }\n\n        nav a:hover {\n            color: #e67e22;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 30px auto;\n            padding: 0 20px;\n        }\n\n        .tag-cloud {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 15px;\n            justify-content: center;\n        }\n\n        .tag {\n            background-color: #ecf0f1;\n            padding: 10px 20px;\n            border-radius: 25px;\n            font-size: 1rem;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n        }\n\n        .tag:hover {\n            background-color: #e67e22;\n            color: white;\n        }\n\n        .tag span {\n            font-size: 0.9em;\n            margin-left: 8px;\n            color: #777;\n        }\n\n        footer {\n            background-color: #2c3e50;\n            color: white;\n            text-align: center;\n            padding: 15px 0;\n            margin-top: 40px;\n        }\n\n        @media (max-width: 600px) {\n            .tag {\n                font-size: 0.9rem;\n                padding: 8px 16px;\n            }\n        }\n    </style>\n    <script>\n        document.addEventListener('DOMContentLoaded', function () {\n            const tags = document.querySelectorAll('.tag');\n            tags.forEach(tag => {\n                tag.addEventListener('click', function () {\n                    const tagName = this.getAttribute('data-tag');\n                    alert(`正在跳转至标签《${tagName}》下的文章列表...`);\n                    // 实际使用时替换为真实跳转路径\n                    // window.location.href = `articles.html?tag=${tagName}`;\n                });\n            });\n        });\n    </script>\n</head>\n<body>\n    <header>\n        <h1>博客系统</h1>\n    </header>\n\n    <nav>\n        <a href=\"index.html\">首页</a>\n        <a href=\"login.html\">登录</a>\n        <a href=\"register.html\">注册</a>\n        <a href=\"tags.html\">标签分类</a>\n        <a href=\"write.html\">发布文章</a>\n    </nav>\n\n    <div class=\"container\">\n        <h2 style=\"text-align:center; margin-bottom: 30px;\">热门标签</h2>\n        <div class=\"tag-cloud\">\n            <div class=\"tag\" data-tag=\"编程\">编程 <span>120篇</span></div>\n            <div class=\"tag\" data-tag=\"Python\">Python <span>85篇</span></div>\n            <div class=\"tag\" data-tag=\"教程\">教程 <span>67篇</span></div>\n            <div class=\"tag\" data-tag=\"前端\">前端 <span>58篇</span></div>\n            <div class=\"tag\" data-tag=\"设计\">设计 <span>42篇</span></div>\n            <div class=\"tag\" data-tag=\"生活\">生活 <span>33篇</span></div>\n            <div class=\"tag\" data-tag=\"科技\">科技 <span>29篇</span></div>\n            <div class=\"tag\" data-tag=\"读书\">读书 <span>25篇</span></div>\n            <div class=\"tag\" data-tag=\"摄影\">摄影 <span>18篇</span></div>\n            <div class=\"tag\" data-tag=\"旅行\">旅行 <span>15篇</span></div>\n        </div>\n    </div>\n\n    <footer>\n        &copy; 2025 博客系统. 保留所有权利。\n    </footer>\n</body>\n</html>",
      "type": "prototype_file"
    }
  ]
}