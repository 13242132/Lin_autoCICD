### ---CRUD_AI_OUTPUT_START---

### ---CLASS_NAMES_START---
controller: TopicController
service: TopicService
repository: TopicRepository
requestClasses: TopicRequests
responseClasses: TopicResponses
### ---CLASS_NAMES_END---

### ---REPOSITORY_START---
package com.example.demo.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.example.demo.entity.Topic;

@Repository
public interface TopicRepository extends JpaRepository<Topic, Long> {

    // 单表：获取所有主题分类
    @Query("SELECT t FROM Topic t")
    List<Topic> findAllTopics();

}
### ---REPOSITORY_END---

### ---REQUEST_CLASSES_START---
package com.example.demo.request;

public class TopicRequests {
}
### ---REQUEST_CLASSES_END---

### ---SERVICE_START---
package com.example.demo.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entity.Topic;
import com.example.demo.repository.TopicRepository;

@Service
public class TopicService {

    private final TopicRepository repository;

    public TopicService(TopicRepository repository) {
        this.repository = repository;
    }

    // 调用数据库层：获取所有主题分类
    public List<Topic> getAllTopics() {
        return repository.findAllTopics();
    }
}
### ---SERVICE_END---

### ---RESPONSE_CLASSES_START---
package com.example.demo.response;

import java.util.List;

public class TopicResponses {

    public static class TopicItem {
        private Long id;
        private String name;

        public TopicItem(Long id, String name) {
            this.id = id;
            this.name = name;
        }

        public Long getId() { return id; }
        public String getName() { return name; }
    }

    public static class GetAllTopicsResponse {
        private List<TopicItem> topics;

        public GetAllTopicsResponse(List<TopicItem> topics) {
            this.topics = topics;
        }

        public List<TopicItem> getTopics() { return topics; }
    }

    // 错误响应类
    public static class ErrorResponse {
        private String error;
        private String message;

        public ErrorResponse(String error, String message) {
            this.error = error;
            this.message = message;
        }

        public String getError() { return error; }
        public String getMessage() { return message; }
    }
}
### ---RESPONSE_CLASSES_END---

### ---CONTROLLER_START---
package com.example.demo.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.demo.entity.Topic;
import com.example.demo.response.TopicResponses;
import com.example.demo.service.TopicService;

@RequestMapping("/api/topics")
@RestController
public class TopicController {

    private final TopicService service;

    public TopicController(TopicService service) {
        this.service = service;
    }

    // 获取所有主题分类
    @GetMapping
    public ResponseEntity<?> getAllTopics() {
        try {
            List<Topic> topics = service.getAllTopics();
            List<TopicResponses.TopicItem> responseItems = topics.stream()
                .map(topic -> new TopicResponses.TopicItem(topic.getId(), topic.getName()))
                .toList();

            return ResponseEntity.ok(new TopicResponses.GetAllTopicsResponse(responseItems));
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                .body(new TopicResponses.ErrorResponse("INTERNAL_ERROR", "服务器内部错误"));
        }
    }
}
### ---CONTROLLER_END---