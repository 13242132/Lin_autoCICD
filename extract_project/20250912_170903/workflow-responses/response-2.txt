### ---CRUD_AI_OUTPUT_START---

### ---CLASS_NAMES_START---
controller: NewsController
service: NewsService
repository: NewsRepository
requestClasses: NewsRequests
responseClasses: NewsResponses
### ---CLASS_NAMES_END---

### ---REPOSITORY_START---
package com.example.demo.repository;

import java.util.List;

import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;

import org.springframework.data.jpa.repository.Query;

import org.springframework.data.repository.query.Param;

import org.springframework.stereotype.Repository;

import com.example.demo.entity.News;

@Repository
public interface NewsRepository extends JpaRepository<News, Long> {

    // 单表：根据分类查询新闻列表
    @Query("SELECT n FROM News n WHERE (:category IS NULL OR n.source = :category) ORDER BY n.publishedAt DESC")
    List<News> findByCategory(@Param("category") String category);

    // 单表：分页查询新闻列表
    @Query("SELECT n FROM News n ORDER BY n.publishedAt DESC")
    List<News> findAllOrderedByPublishedAt(@Param("page") int page, @Param("size") int size);

    // 单表：根据分类和分页查询新闻列表
    @Query("SELECT n FROM News n WHERE (:category IS NULL OR n.source = :category) ORDER BY n.publishedAt DESC")
    List<News> findByCategoryAndPage(@Param("category") String category, @Param("page") int page, @Param("size") int size);

    // 单表：查询新闻总数
    @Query("SELECT COUNT(n) FROM News n")
    long countAllNews();

    // 单表：根据分类查询新闻总数
    @Query("SELECT COUNT(n) FROM News n WHERE (:category IS NULL OR n.source = :category)")
    long countNewsByCategory(@Param("category") String category);

}
### ---REPOSITORY_END---

### ---REQUEST_CLASSES_START---
package com.example.demo.request;

public class NewsRequests {

    public static class GetNewsListRequest {
        private String category;
        private Integer page;
        private Integer size;

        public GetNewsListRequest(String category, Integer page, Integer size) {
            this.category = category;
            this.page = page != null ? page : 1;
            this.size = size != null ? size : 10;
        }

        public String getCategory() { return category; }
        public Integer getPage() { return page; }
        public Integer getSize() { return size; }
    }
}
### ---REQUEST_CLASSES_END---

### ---SERVICE_START---
package com.example.demo.service;

import java.util.List;

import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Service;

import com.example.demo.entity.News;

import com.example.demo.repository.NewsRepository;

import com.example.demo.request.NewsRequests;

import com.example.demo.response.NewsResponses;

@Service
public class NewsService {

    private final NewsRepository repository;

    public NewsService(NewsRepository repository) {
        this.repository = repository;
    }

    // 调用数据库层：查询新闻列表
    public NewsResponses.GetNewsListResponse getNewsList(NewsRequests.GetNewsListRequest request) {
        int page = request.getPage();
        int size = request.getSize();
        String category = request.getCategory();

        // 分页计算
        int offset = (page - 1) * size;

        List<News> newsList;
        long total;

        if (category == null || category.isEmpty()) {
            newsList = repository.findAllOrderedByPublishedAt(offset, size);
            total = repository.countAllNews();
        } else {
            newsList = repository.findByCategoryAndPage(category, offset, size);
            total = repository.countNewsByCategory(category);
        }

        List<NewsResponses.NewsItem> items = newsList.stream()
                .map(news -> new NewsResponses.NewsItem(
                        news.getId(),
                        news.getTitle(),
                        news.getSource(),
                        news.getPublishedAt().toString(),
                        news.getSummary()
                ))
                .collect(Collectors.toList());

        return new NewsResponses.GetNewsListResponse(items, total, page, size);
    }
}
### ---SERVICE_END---

### ---RESPONSE_CLASSES_START---
package com.example.demo.response;

import java.util.List;

public class NewsResponses {

    public static class GetNewsListResponse {
        private List<NewsItem> items;
        private long total;
        private int page;
        private int size;

        public GetNewsListResponse(List<NewsItem> items, long total, int page, int size) {
            this.items = items;
            this.total = total;
            this.page = page;
            this.size = size;
        }

        public List<NewsItem> getItems() { return items; }
        public long getTotal() { return total; }
        public int getPage() { return page; }
        public int getSize() { return size; }

        public static class NewsItem {
            private Long id;
            private String title;
            private String source;
            private String publishedAt;
            private String summary;

            public NewsItem(Long id, String title, String source, String publishedAt, String summary) {
                this.id = id;
                this.title = title;
                this.source = source;
                this.publishedAt = publishedAt;
                this.summary = summary;
            }

            public Long getId() { return id; }
            public String getTitle() { return title; }
            public String getSource() { return source; }
            public String getPublishedAt() { return publishedAt; }
            public String getSummary() { return summary; }
        }
    }

    public static class ErrorResponse {
        private String error;
        private String message;

        public ErrorResponse(String error, String message) {
            this.error = error;
            this.message = message;
        }

        public String getError() { return error; }
        public String getMessage() { return message; }
    }
}
### ---RESPONSE_CLASSES_END---

### ---CONTROLLER_START---
package com.example.demo.controller;

import java.util.List;

import org.springframework.http.HttpStatus;

import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.*;

import com.example.demo.entity.News;

import com.example.demo.service.NewsService;

import com.example.demo.request.NewsRequests;

import com.example.demo.response.NewsResponses;

@RestController
@RequestMapping("/api/news")
public class NewsController {

    private final NewsService service;

    public NewsController(NewsService service) {
        this.service = service;
    }

    // 获取新闻列表
    @GetMapping
    public ResponseEntity<?> getNewsList(
            @RequestParam(required = false) String category,
            @RequestParam(required = false, defaultValue = "1") Integer page,
            @RequestParam(required = false, defaultValue = "10") Integer size) {

        NewsRequests.GetNewsListRequest request = new NewsRequests.GetNewsListRequest(category, page, size);

        try {
            NewsResponses.GetNewsListResponse response = service.getNewsList(request);
            return ResponseEntity.ok(response);
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(new NewsResponses.ErrorResponse("NEWS_FETCH_FAILED", "无法从第三方源获取新闻"));
        }
    }
}
### ---CONTROLLER_END---