### ---CRUD_AI_OUTPUT_START---

### ---CLASS_NAMES_START---
controller: UserController
service: UserService
repository: UserRepository
requestClasses: UserRequests
responseClasses: UserResponses
### ---CLASS_NAMES_END---

### ---REPOSITORY_START---
package com.example.demo.repository;

import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.example.demo.entity.User;

@Repository
public interface UserRepository extends JpaRepository<User, Long> {

    // 单表：根据ID查询用户
    @Query("SELECT u FROM User u WHERE u.id = :id")
    Optional<User> findById(@Param("id") Long id);

}
### ---REPOSITORY_END---

### ---REQUEST_CLASSES_START---
package com.example.demo.request;

public class UserRequests {

}
### ---REQUEST_CLASSES_END---

### ---SERVICE_START---
package com.example.demo.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entity.User;
import com.example.demo.repository.UserRepository;
import com.example.demo.api.service.SubscriptionApiService;
import com.example.demo.api.querydto.SubscriptionQueryDTO;

@Service
public class UserService {

    private final UserRepository repository;

    // 注入外部模块的Service
    @Autowired
    private SubscriptionApiService subscriptionApiService;

    public UserService(UserRepository repository) {
        this.repository = repository;
    }

    // 调用数据库层：根据ID查询用户详情
    public Optional<User> getUserProfile(Long userId) {
        return repository.findById(userId);
    }

    // 获取用户订阅数（多表接口）
    public Long getSubscriptionCount(Long userId) {
        SubscriptionQueryDTO queryDTO = new SubscriptionQueryDTO();
        queryDTO.setUserId(userId);
        return (long) subscriptionApiService.queryByConditions(queryDTO).size();
    }
}
### ---SERVICE_END---

### ---RESPONSE_CLASSES_START---
package com.example.demo.response;

import java.time.LocalDateTime;

public class UserResponses {

    public static class UserProfileResponse {
        private Long id;
        private String username;
        private String email;
        private String avatar;
        private String status;
        private LocalDateTime createdAt;
        private Long subscriptionCount;
        private LocalDateTime lastLoginAt;

        public UserProfileResponse(Long id, String username, String email, String avatar, String status,
                                   LocalDateTime createdAt, Long subscriptionCount, LocalDateTime lastLoginAt) {
            this.id = id;
            this.username = username;
            this.email = email;
            this.avatar = avatar;
            this.status = status;
            this.createdAt = createdAt;
            this.subscriptionCount = subscriptionCount;
            this.lastLoginAt = lastLoginAt;
        }

        public Long getId() { return id; }
        public String getUsername() { return username; }
        public String getEmail() { return email; }
        public String getAvatar() { return avatar; }
        public String getStatus() { return status; }
        public LocalDateTime getCreatedAt() { return createdAt; }
        public Long getSubscriptionCount() { return subscriptionCount; }
        public LocalDateTime getLastLoginAt() { return lastLoginAt; }
    }

    public static class ErrorResponse {
        private String error;
        private String message;

        public ErrorResponse(String error, String message) {
            this.error = error;
            this.message = message;
        }

        public String getError() { return error; }
        public String getMessage() { return message; }
    }
}
### ---RESPONSE_CLASSES_END---

### ---CONTROLLER_START---
package com.example.demo.controller;

import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.User;
import com.example.demo.service.UserService;
import com.example.demo.response.UserResponses;

@RestController
@RequestMapping("/api/users")
public class UserController {

    private final UserService service;

    public UserController(UserService service) {
        this.service = service;
    }

    // 获取用户个人资料
    @GetMapping("/{userId}/profile")
    public ResponseEntity<?> getProfile(@PathVariable Long userId) {
        Optional<User> userOpt = service.getUserProfile(userId);
        if (userOpt.isPresent()) {
            User user = userOpt.get();
            Long subscriptionCount = service.getSubscriptionCount(userId);
            UserResponses.UserProfileResponse response = new UserResponses.UserProfileResponse(
                user.getId(),
                user.getUsername(),
                user.getEmail(),
                user.getAvatar(),
                user.getStatus(),
                user.getCreatedAt(),
                subscriptionCount,
                user.getLastLoginAt()
            );
            return ResponseEntity.ok(response);
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND)
                .body(new UserResponses.ErrorResponse("USER_NOT_FOUND", "用户不存在"));
        }
    }
}
### ---CONTROLLER_END---