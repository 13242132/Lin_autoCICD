### ---CRUD_AI_OUTPUT_START---

### ---CLASS_NAMES_START---
controller: ProfileController
service: ProfileService
repository: ProfileRepository
requestClasses: ProfileRequests
responseClasses: ProfileResponses
### ---CLASS_NAMES_END---

### ---REPOSITORY_START---
package com.example.demo.repository;

import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.example.demo.entity.User;
import com.example.demo.entity.Subscription;

@Repository
public interface ProfileRepository extends JpaRepository<User, Long> {

    // 单表：根据ID查询用户
    @Query("SELECT u FROM User u WHERE u.id = :id")
    Optional<User> findById(@Param("id") Long id);

    // 单表：根据用户ID查询订阅主题
    @Query("SELECT s.topicName FROM Subscription s WHERE s.userId = :userId")
    List<String> findSubscriptionsByUserId(@Param("userId") Long userId);
}
### ---REPOSITORY_END---

### ---REQUEST_CLASSES_START---
package com.example.demo.request;

import lombok.Data;

public class ProfileRequests {

    @Data
    public static class GetProfileRequest {
        private Long userId;
    }
}
### ---REQUEST_CLASSES_END---

### ---SERVICE_START---
package com.example.demo.service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.entity.User;
import com.example.demo.entity.Subscription;
import com.example.demo.repository.ProfileRepository;
import com.example.demo.api.querydto.SubscriptionQueryDTO;
import com.example.demo.api.service.SubscriptionApiService;
import com.example.demo.request.ProfileRequests;
import com.example.demo.response.ProfileResponses;

@Service
public class ProfileService {

    private final ProfileRepository repository;

    @Autowired
    private SubscriptionApiService subscriptionApiService;

    public ProfileService(ProfileRepository repository) {
        this.repository = repository;
    }

    // 调用数据库层：获取用户基本信息及订阅列表
    public ProfileResponses.GetProfileResponse getProfile(Long userId) {
        Optional<User> userOpt = repository.findById(userId);
        if (!userOpt.isPresent()) {
            return null; // 返回null表示用户不存在，由Controller处理
        }

        User user = userOpt.get();

        // 查询用户的订阅主题
        List<String> subscriptions = repository.findSubscriptionsByUserId(userId);

        // 构造响应对象
        ProfileResponses.GetProfileResponse response = new ProfileResponses.GetProfileResponse();
        response.setId(user.getId());
        response.setUsername(user.getUsername());
        response.setEmail(user.getEmail());
        response.setAvatar(user.getAvatar());
        response.setStatus(user.getStatus());
        response.setCreatedAt(user.getCreatedAt().toString()); // 转换为字符串格式
        response.setSubscriptions(subscriptions);

        return response;
    }

    // 获取用户订阅信息（多表接口）
    public List<String> getUserSubscriptions(Long userId) {
        return repository.findSubscriptionsByUserId(userId);
    }
}
### ---SERVICE_END---

### ---RESPONSE_CLASSES_START---
package com.example.demo.response;

import java.util.List;

import lombok.Data;

public class ProfileResponses {

    @Data
    public static class GetProfileResponse {
        private Long id;
        private String username;
        private String email;
        private String avatar;
        private String status;
        private String createdAt;
        private List<String> subscriptions;
    }

    // 错误响应类
    @Data
    public static class ErrorResponse {
        private String error;
        private String message;
    }
}
### ---RESPONSE_CLASSES_END---

### ---CONTROLLER_START---
package com.example.demo.controller;

import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.example.demo.entity.User;
import com.example.demo.service.ProfileService;
import com.example.demo.auth.annotation.CurrentUserId;
import com.example.demo.response.ProfileResponses;

@RestController
@RequestMapping("/api/profile")
public class ProfileController {

    private final ProfileService service;

    public ProfileController(ProfileService service) {
        this.service = service;
    }

    // 获取当前登录用户的基本信息
    @GetMapping
    public ResponseEntity<?> getProfile(@CurrentUserId Long userId) {
        ProfileResponses.GetProfileResponse response = service.getProfile(userId);
        if (response == null) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND)
                    .body(new ProfileResponses.ErrorResponse("USER_NOT_FOUND", "用户不存在"));
        }
        return ResponseEntity.ok(response);
    }
}
### ---CONTROLLER_END---
### ---CRUD_AI_OUTPUT_END---