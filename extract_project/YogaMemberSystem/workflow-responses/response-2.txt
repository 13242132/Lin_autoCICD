### ---CRUD_AI_OUTPUT_START---
### ---CLASS_NAMES_START---
controller: CourseController
service: CourseService
repository: CourseRepository
### ---CLASS_NAMES_END---

### ---REPOSITORY_START---
package com.example.demo.repository;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import com.example.demo.entity.Course;

@Repository
public interface CourseRepository extends JpaRepository<Course, Long> {
    
    // 单表：根据日期和关键词查询课程列表
    @Query("SELECT c FROM Course c WHERE " +
           "(:date IS NULL OR CAST(c.startTime AS localdate) = :date) AND " +
           "(:keyword IS NULL OR c.name LIKE %:keyword% OR c.coach LIKE %:keyword%)")
    List<Course> findCoursesByDateAndKeyword(@Param("date") LocalDate date, 
                                            @Param("keyword") String keyword);
    
    // 单表：获取所有课程
    default List<Course> findAllCourses() {
        return findAll();
    }
}
### ---REPOSITORY_END---

### ---SERVICE_START---
package com.example.demo.service;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import org.springframework.stereotype.Service;
import com.example.demo.entity.Course;
import com.example.demo.repository.CourseRepository;

@Service
public class CourseService {
    
    private final CourseRepository repository;
    
    public CourseService(CourseRepository repository) {
        this.repository = repository;
    }
    
    // 调用数据库层：根据日期和关键词查询课程列表
    public List<Course> getCourses(String dateStr, String keyword) {
        LocalDate date = null;
        if (dateStr != null && !dateStr.isEmpty()) {
            date = LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);
        }
        return repository.findCoursesByDateAndKeyword(date, keyword);
    }
}
### ---SERVICE_END---

### ---CONTROLLER_START---
package com.example.demo.controller;

import java.util.List;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.example.demo.entity.Course;
import com.example.demo.service.CourseService;

@RestController
@RequestMapping("/api/courses")
public class CourseController {
    
    private final CourseService service;
    
    public CourseController(CourseService service) {
        this.service = service;
    }
    
    // 获取课程列表
    @GetMapping
    public ResponseEntity<?> getCourses(
            @RequestParam(required = false) String date,
            @RequestParam(required = false) String keyword) {
        
        try {
            List<Course> courses = service.getCourses(date, keyword);
            return ResponseEntity.ok(courses);
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                    .body(new ErrorResponse("INTERNAL_ERROR", "服务器内部错误"));
        }
    }
    
    // 错误响应类
    private static class ErrorResponse {
        private String error;
        private String message;
        
        public ErrorResponse(String error, String message) {
            this.error = error;
            this.message = message;
        }
        
        public String getError() { return error; }
        public String getMessage() { return message; }
    }
}
### ---CONTROLLER_END---