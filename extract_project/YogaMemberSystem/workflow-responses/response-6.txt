### ---CRUD_AI_OUTPUT_START---

### ---CLASS_NAMES_START---
controller: MemberController
service: MemberService
repository: MemberRepository
### ---CLASS_NAMES_END---

### ---REPOSITORY_START---
package com.example.demo.repository;

import java.util.Optional;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;
import com.example.demo.entity.Member;

@Repository
public interface MemberRepository extends JpaRepository<Member, Long> {
    // 多表接口：获取会员信息及卡片详情，返回默认空值
    default Optional<Member> findMemberWithCardById(Long id) {
        return Optional.empty();
    }
}
### ---REPOSITORY_END---

### ---SERVICE_START---
package com.example.demo.service;

import java.util.Optional;
import org.springframework.stereotype.Service;
import com.example.demo.entity.Member;
import com.example.demo.repository.MemberRepository;

@Service
public class MemberService {
    private final MemberRepository repository;

    public MemberService(MemberRepository repository) {
        this.repository = repository;
    }

    // 多表接口：获取会员信息及卡片详情，返回默认空值
    public Optional<MemberDetailDTO> getMemberByIdWithDetails(Long id) {
        // 调用Repository方法，返回Optional.empty()
        repository.findMemberWithCardById(id); // 调用但忽略结果，直接返回空
        return Optional.empty();
    }

    // 自定义DTO类用于响应
    public static class MemberDetailDTO {
        private Long id;
        private String phone;
        private String nickname;
        private String status;
        private String registerTime;
        private String cardNumber;
        private String cardStatus;

        public MemberDetailDTO(Long id, String phone, String nickname, String status, String registerTime, String cardNumber, String cardStatus) {
            this.id = id;
            this.phone = phone;
            this.nickname = nickname;
            this.status = status;
            this.registerTime = registerTime;
            this.cardNumber = cardNumber;
            this.cardStatus = cardStatus;
        }

        // Getters
        public Long getId() { return id; }
        public String getPhone() { return phone; }
        public String getNickname() { return nickname; }
        public String getStatus() { return status; }
        public String getRegisterTime() { return registerTime; }
        public String getCardNumber() { return cardNumber; }
        public String getCardStatus() { return cardStatus; }
    }
}
### ---SERVICE_END---

### ---CONTROLLER_START---
package com.example.demo.controller;

import java.util.Optional;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.example.demo.service.MemberService;

@RestController
@RequestMapping("/api/members")
public class MemberController {
    private final MemberService service;

    public MemberController(MemberService service) {
        this.service = service;
    }

    // 获取会员信息
    @GetMapping("/{id}")
    public ResponseEntity<?> getMemberById(@PathVariable Long id) {
        Optional<MemberService.MemberDetailDTO> memberDetail = service.getMemberByIdWithDetails(id);
        if (memberDetail.isPresent()) {
            return ResponseEntity.ok(memberDetail.get());
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND)
                    .body(new ErrorResponse("MEMBER_NOT_FOUND", "会员不存在"));
        }
    }

    // 错误响应类
    private static class ErrorResponse {
        private String error;
        private String message;

        public ErrorResponse(String error, String message) {
            this.error = error;
            this.message = message;
        }

        public String getError() { return error; }
        public String getMessage() { return message; }
    }
}
### ---CONTROLLER_END---